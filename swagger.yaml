swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8050
basePath: /
tags:
  - name: family-controller
    description: Family Controller
  - name: family-member-controller
    description: Family Member Controller
  - name: shopping-list-controller
    description: Shopping List Controller
  - name: shopping-list-item-controller
    description: Shopping List Item Controller
paths:
  /api/family:
    get:
      tags:
        - family-controller
      summary: ' Gets all families.'
      operationId: getFamiliesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyPlain'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - family-controller
      summary: Adds a family.
      operationId: addMemberUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: family
          description: family
          required: true
          schema:
            $ref: '#/definitions/CreateFamily'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyPlain'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/family-member:
    get:
      tags:
        - family-member-controller
      summary: ' Gets all family members.'
      operationId: getMembersUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyMemberGet'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - family-member-controller
      summary: Adds a family member.
      operationId: addMemberUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: memberDto
          description: memberDto
          required: true
          schema:
            $ref: '#/definitions/CreateFamilyMember'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyMemberGet'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/family-member/login:
    post:
      tags:
        - family-member-controller
      summary: Login method for users
      operationId: loginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginData
          description: loginData
          required: true
          schema:
            $ref: '#/definitions/LoginDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/family-member/register:
    post:
      tags:
        - family-member-controller
      summary: Sign up method for users
      operationId: registerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginData
          description: loginData
          required: true
          schema:
            $ref: '#/definitions/LoginDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tokens'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/family-member/{id}:
    get:
      tags:
        - family-member-controller
      summary: Gets the data of the member by the ID.
      operationId: getMemberByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyMemberGet'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - family-member-controller
      summary: Updates the data of a family member.
      operationId: updateMemberByIdUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: member
          description: member
          required: true
          schema:
            $ref: '#/definitions/CreateFamilyMember'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyMemberGet'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - family-member-controller
      summary: Deletes the member by the ID.
      operationId: deleteByIdUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyMemberPlain'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/family/{id}:
    get:
      tags:
        - family-controller
      summary: Gets the data of the family by the ID.
      operationId: getFamilyByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyPlain'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - family-controller
      summary: Updates the data of a family.
      operationId: updateMemberByIdUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: family
          description: family
          required: true
          schema:
            $ref: '#/definitions/CreateFamily'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyPlain'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - family-controller
      summary: Deletes the family with the ID.
      operationId: deleteByIdUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyPlain'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/family/{id}/add_member:
    post:
      tags:
        - family-controller
      summary: Endpoint for joining the family
      operationId: addToFamilyUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: memberId
          in: query
          description: memberId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyPlain'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/family/{id}/join:
    post:
      tags:
        - family-controller
      summary: Endpoint for joining the family
      operationId: joinFamilyUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: memberId
          in: query
          description: memberId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyPlain'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/family/{id}/leave:
    post:
      tags:
        - family-controller
      summary: Endpoint for leaving the family
      operationId: leaveFamilyUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: memberId
          in: query
          description: memberId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyPlain'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/shopping-list:
    get:
      tags:
        - shopping-list-controller
      summary: Gets all shopping lists.
      operationId: getMembersUsingGET_1
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ShoppingListGet'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - shopping-list-controller
      summary: Creates a new shopping list.
      operationId: addMemberUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: list
          description: list
          required: true
          schema:
            $ref: '#/definitions/CreateShoppingList'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListGet'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/shopping-list-item:
    get:
      tags:
        - shopping-list-item-controller
      summary: Gets all shopping list items.
      operationId: getMembersUsingGET_2
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ShoppingListItemPlain'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - shopping-list-item-controller
      summary: Creates a new shopping list item.
      operationId: addMemberUsingPOST_3
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: item
          description: item
          required: true
          schema:
            $ref: '#/definitions/CreateShoppingListItem'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListItemPlain'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/shopping-list-item/{id}:
    get:
      tags:
        - shopping-list-item-controller
      summary: Gets the data of the item by the ID.
      operationId: getMemberByIdUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListItemPlain'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - shopping-list-item-controller
      summary: Updates the data of a shopping list.
      operationId: updateMemberByIdUsingPUT_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: item
          description: item
          required: true
          schema:
            $ref: '#/definitions/CreateShoppingListItem'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListItemPlain'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - shopping-list-item-controller
      summary: Deletes the item by the ID.
      operationId: deleteByIdUsingDELETE_3
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListItemPlain'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/shopping-list-item/{id}/purchase:
    patch:
      tags:
        - shopping-list-item-controller
      summary: Purchasing the item by the ID.
      operationId: purchaseByIdUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListItemPlain'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/shopping-list/{id}:
    get:
      tags:
        - shopping-list-controller
      summary: Gets the data of the shopping list by the ID.
      operationId: getMemberByIdUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListGet'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - shopping-list-controller
      summary: Deletes the shopping list by the ID.
      operationId: deleteByIdUsingDELETE_2
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListGet'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/shopping-list/{id}/add-item/{item_id}:
    patch:
      tags:
        - shopping-list-controller
      summary: Adds the shopping list item to the shopping list
      operationId: addItemUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: item_id
          in: path
          description: item_id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListGet'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/shopping-list/{id}/remove-item/{item_id}:
    patch:
      tags:
        - shopping-list-controller
      summary: Removes the shopping list item from the shopping list
      operationId: removeItemUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: item_id
          in: path
          description: item_id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingListGet'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
definitions:
  CreateFamily:
    type: object
    required:
      - name
    properties:
      headId:
        type: integer
        format: int64
      memberIds:
        type: array
        items:
          type: integer
          format: int64
      name:
        type: string
    title: CreateFamily
  CreateFamilyMember:
    type: object
    required:
      - email
      - lastName
      - surname
      - uid
    properties:
      birthDate:
        type: string
        format: date
      email:
        type: string
      familyId:
        type: integer
        format: int64
      lastName:
        type: string
      photo:
        type: string
      surname:
        type: string
      uid:
        type: string
    title: CreateFamilyMember
  CreateShoppingList:
    type: object
    required:
      - familyId
      - location
    properties:
      familyId:
        type: integer
        format: int64
      location:
        type: string
    title: CreateShoppingList
  CreateShoppingListItem:
    type: object
    required:
      - amount
      - price
      - product
      - shoppingListId
    properties:
      amount:
        type: integer
        format: int32
      price:
        type: integer
        format: int32
      product:
        type: string
      shoppingListId:
        type: integer
        format: int64
    title: CreateShoppingListItem
  FamilyMemberGet:
    type: object
    required:
      - email
      - id
      - lastName
      - surname
      - uid
    properties:
      birthDate:
        type: string
        format: date
      email:
        type: string
      family:
        $ref: '#/definitions/FamilyPlain'
      id:
        type: integer
        format: int64
      lastName:
        type: string
      photo:
        type: string
      surname:
        type: string
      uid:
        type: string
      username:
        type: string
    title: FamilyMemberGet
  FamilyMemberPlain:
    type: object
    required:
      - email
      - id
      - lastName
      - surname
      - uid
    properties:
      birthDate:
        type: string
        format: date
      email:
        type: string
      familyId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      lastName:
        type: string
      photo:
        type: string
      surname:
        type: string
      uid:
        type: string
      username:
        type: string
    title: FamilyMemberPlain
  FamilyPlain:
    type: object
    required:
      - code
      - id
      - name
    properties:
      code:
        type: string
      head:
        $ref: '#/definitions/FamilyMemberPlain'
      id:
        type: integer
        format: int64
      members:
        type: array
        items:
          $ref: '#/definitions/FamilyMemberPlain'
      name:
        type: string
    title: FamilyPlain
  LoginDTO:
    type: object
    required:
      - password
      - uid
      - username
    properties:
      password:
        type: string
      uid:
        type: string
      username:
        type: string
    title: LoginDTO
  ShoppingListGet:
    type: object
    required:
      - completed
      - familyId
      - fullPrice
      - id
    properties:
      completed:
        type: boolean
      familyId:
        type: integer
        format: int64
      fullPrice:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      items:
        type: array
        items:
          $ref: '#/definitions/ShoppingListItemPlain'
    title: ShoppingListGet
  ShoppingListItemPlain:
    type: object
    required:
      - amount
      - id
      - price
      - product
      - shoppingListId
    properties:
      amount:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      price:
        type: integer
        format: int32
      product:
        type: string
      shoppingListId:
        type: integer
        format: int64
    title: ShoppingListItemPlain
  Tokens:
    type: object
    required:
      - accessToken
      - refreshToken
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    title: Tokens
